<?php

/**
 * @file
 * Contains hook implementations and helper functions for GSB CMSI Test
 */

/**
 * Implements hook_menu().
 */
function gsb_cmis_test_menu() {
  $items = array();
  $items['admin/config/gsb/cmsi-test'] = array(
    'title' => 'CMIS Test',
    'description' => 'Test CMSI.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('gsb_cmis_test_form'),    
    'access arguments' => array('access administration pages'),    
  );
  $items['gsb-cmis-test/alfresco-ping-test/%'] = array(
    'title' => 'Alfresco Ping Test',
    'description' => 'Alfresco Ping Test.',
    'page callback' => 'gsb_cmis_test_alfresco_ping',
    'page arguments' => array(2),  
    //'access arguments' => array('access administration pages'),
    'access callback' => TRUE,
  );  
  $items['gsb-cmis-test/%gsb_cmis_test_content_type/%'] = array(
    'title' => 'GSB CMIS Test Process',
    'description' => 'GSB CMIS Test Process.',
    'page callback' => 'gsb_cmis_test_content_type_process',
    'page arguments' => array(1,2),
    'access arguments' => array(1),
    'access callback' => 'gsb_cmis_test_process_access',
  );    
  return $items;
}

function gsb_cmis_test_process_access($content_type) {
  $token_key = variable_get('gsb_cmis_content_type_import_token', '');
  if (!empty($_GET['token']) && !empty($token_key) && $_GET['token'] == $token_key) {
    return TRUE;
  }
  return FALSE;
}

function gsb_cmis_test_content_type_initial_load($content_type, $uuid) {
  if ($content_type != 'case') {
    return FALSE;
  }
  $info = module_invoke_all('gsb_cmis_test_process_info');
  $docs = gsb_cmis_api_getDocuments('default', $uuid);
  foreach ($docs as $doc) {
    $info[$content_type]['callback']($doc, $doc->uuid);
  }
}

function gsb_cmis_test_content_type_load($content_type) {

  /*
  $content_type = 'case';
  gsb_cmis_test_content_type_initial_load(
    $content_type, 
    // my Greg folder on QA
    //46de00be-f68f-4d90-a05c-cf9213880386
    'urn:uuid:46de00be-f68f-4d90-a05c-cf9213880386'
  ); 
  return;
  */

  if ($content_type != 'case') {
    return FALSE;
  }
  $info = module_invoke_all('gsb_cmis_test_process_info');
  return $info[$content_type];
}

function gsb_cmis_test_content_type_process($process_info, $uuid) {
  $doc = gsb_cmis_api_getDocumentObject('default', $uuid);
  $process_info['callback']($doc, $uuid);
  return 'hello from gsb_cmis_test_process';
}

function gsb_cmis_test_alfresco_ping($uuid) {

  global $user;

  dpm($uuid);
  
  $doc = gsb_cmis_api_getDocumentObject('default', $uuid);
  dpm($doc);

  $url = gsb_cmis_api_getObjectURL('default', $doc);

  $query = new EntityFieldQuery();
  $query->fieldCondition('field_document_uuid', 'value', $uuid, '=')->range(0, 1);
  $entities = $query->execute();    

  if (!empty($entities['node'])) {
    $nids = array_keys($entities['node']);
    $node = node_load(array_shift($nids));
  } else {
    $values = array(
      'type' => 'case',
      'uid' => $user->uid,
      'status' => 1,
      'comment' => 1,
      'promote' => 0,
    );
    $node = entity_create('node', $values);
  }

  $ewrapper = entity_metadata_wrapper('node', $node);

  $ewrapper->title->set($doc->properties['cm:title']);
  $ewrapper->field_document_uuid->set($uuid);

  $ewrapper->field_year->set($doc->properties['gsb:cwoPublicationYear']);
  $ewrapper->field_document_name->set($doc->properties['cmis:contentStreamFileName']);
  $ewrapper->field_description->set($doc->properties['cm:description']);
  if (!empty($url) && trim($url) != '') {
    $ewrapper->field_link_document->url->set($url);
  }
  $ewrapper->field_author->set(array_map('trim', explode(',', $doc->properties['cm:author'])));
  $ewrapper->field_permissions_statement->set($doc->properties['gsb:permisiionStatement']);
  if (!empty($doc->properties['gsb:cwoLinkAtHarvard']) && trim($doc->properties['gsb:cwoLinkAtHarvard']) != '') {
    $ewrapper->field_link_single->url->set($doc->properties['gsb:cwoLinkAtHarvard']);
  }
  $ewrapper->field_citation->set($doc->properties['gsb:cwoCitation']);

  $ewrapper->save();

  return 'called _gsb_cmis_test_get_document() uuid = ' . $uuid;
}

function gsb_cmis_test_form(array $form, array &$form_state) {
  $form['gsb_cmsi_test_objectid'] = array(
    '#type' => 'textfield',
    '#title' => t('Object Id'),
    // cases
    //'#default_value' => 'urn:uuid:7dd6590d-b53f-41e1-9e9e-e3e31cc14709'
    // research papers 
    '#default_value' => 'urn:uuid:f0afc9f2-eefa-49fc-b6b2-5661b1934985'
    // greg folder on contentqa
    //'#default_value' => 'urn:uuid:46de00be-f68f-4d90-a05c-cf9213880386'
    //'#default_value' => 'urn:uuid:9bc77ab5-b18d-4936-bee0-5b925fcad4cd'
  );  
  $form['actions'] = array('#type' => 'actions');
  $form['actions']['submit'] = array(
    '#type' => 'submit',
    '#value' => st('Get Properties'),
    '#submit' => array('gsb_cmis_test_form_submit'),
  );
  $form['actions']['getdoc'] = array(
    '#type' => 'submit',
    '#value' => st('Download Document'),
    '#submit' => array('gsb_cmis_test_form_submit_downloaddoc'),
  );    
  $form['actions']['getdocurl'] = array(
    '#type' => 'submit',
    '#value' => st('Get Document URL'),
    '#submit' => array('gsb_cmis_test_form_submit_getdoc'),
  );
  $form['actions']['getrp'] = array(
    '#type' => 'submit',
    '#value' => st('Get Docs'),
    '#submit' => array('gsb_cmis_test_form_submit_research_papers'),
  );
  return $form;
}

function gsb_cmis_test_form_submit_getdoc(array &$form, array &$form_state) {

  $object_id = $form_state['values']['gsb_cmsi_test_objectid'];
  $doc_url = gsb_cmis_api_getDocumentURL('default', $object_id);
  dpm($doc_url);

}

function gsb_cmis_test_form_submit_research_papers(array &$form, array &$form_state) {

  $object_id = $form_state['values']['gsb_cmsi_test_objectid'];
  _gsb_cmis_test_get_documents($object_id);

}

function gsb_cmis_test_form_submit_downloaddoc(array &$form, array &$form_state) {

  $object_id = $form_state['values']['gsb_cmsi_test_objectid'];
  _gsb_cmis_test_download_document($object_id);

}

function gsb_cmis_test_form_submit(array &$form, array &$form_state) {
  
  $object_id = $form_state['values']['gsb_cmsi_test_objectid'];
  $object = _gsb_cmis_test_get_object($object_id);

  // Rebuild the form
  $form_state['rebuild'] = TRUE;
}

function _gsb_cmis_test_get_object($uuid) {
  return $object = gsb_cmis_api_getDocumentObject('default', $uuid);
}

/**
 * Gets the document
 */
function _gsb_cmis_test_get_document($uuid) {
  $docs = gsb_cmis_api_getDocuments('default', $uuid);
  return $docs;
}

function _gsb_cmis_test_get_documents($uuid) {
  $docs = gsb_cmis_api_getDocuments('default', $uuid);
  dpm($docs);
}

/**
 * CMIS document download handler.
 */
function _gsb_cmis_test_download_document($uuid) {

  module_load_include('api.inc', 'cmis');

  $repository = cmis_get_repository();    
  $object = _gsb_cmis_test_get_object($uuid);
  
  try {
    $content = cmisapi_getContentStream($repository->repositoryId, $object->id);
  }
  catch (CMISException $e) {
    cmis_error_handler('cmis_browser_content_get', $e);
    drupal_add_http_header('', 'HTTP/1.1 503 Service unavailable');
    exit();
  }
  
  if (ob_get_level()) {
    ob_end_clean();
  }

  drupal_add_http_header('Cache-Control', 'no-cache, must-revalidate');
  drupal_add_http_header('Content-type:', $object->properties['cmis:contentStreamMimeType']);
  if ($object->properties['cmis:contentStreamMimeType'] != 'text/html') {
    drupal_add_http_header('Content-Disposition', 'attachment; filename="'. $object->properties['cmis:name'] .'"');  
  }
   
  print($content);

  exit();
}


